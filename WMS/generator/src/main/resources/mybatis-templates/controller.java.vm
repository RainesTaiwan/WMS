#set($dashedName = $table.name.replace("_", "-"))
package ${package.Controller};

import AjaxResult;
import FrontPage;
import Secured;
import CommonMethods;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
#foreach($field in ${table.fields})
#if(${field.capitalName} == "CreateTime" || ${field.capitalName} == "UpdateTime")
import java.time.LocalDateTime;
#break;
#end
#end
import java.util.List;

/**
 *
 * @author ${author}
 * @since ${date}
 */
@RestController
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${dashedName}#end")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    public ${table.serviceName} ${table.entityPath}Service;

    /**
    * 根據id查詢
    *
    * @param id 主鍵
    * @return
    */
    @ResponseBody
    @GetMapping("/{id:.+}")
    public AjaxResult get${entity}ById(@PathVariable String id) {
        return AjaxResult.success( ${table.entityPath}Service.getById(id));
    }

    /**
     * 查詢所有數據
     *
     * @return
     */
    @ResponseBody
    @GetMapping("")
    public AjaxResult get${entity}List(${entity} ${table.entityPath}){
        List<${entity}> result;
        QueryWrapper<${entity}> queryWrapper = new QueryWrapper<>();
        queryWrapper.setEntity(${table.entityPath});
        result = ${table.entityPath}Service.list(queryWrapper);
        return AjaxResult.success(result);
    }

    /**
     * 分頁查詢數據
     *
     * @param frontPage  分頁資訊
     * @return
     */
    @ResponseBody
    @GetMapping("/page")
    public AjaxResult page(FrontPage<${entity}> frontPage, ${entity} ${table.entityPath}){
        IPage result;
        QueryWrapper<${entity}> queryWrapper = new QueryWrapper<>();
        queryWrapper.setEntity(${table.entityPath});
        if (frontPage.getGlobalQuery() != null && !"".equals(frontPage.getGlobalQuery().trim())) {
            //TODO modify global query
            queryWrapper.lambda().and(wrapper -> wrapper
#foreach($field in ${table.fields})
#if(${field.propertyType.equals("String")})
#if($!{velocityCount} == 1)
                .like(${entity}::get${field.capitalName}, frontPage.getGlobalQuery())
#else
                .or().like(${entity}::get${field.capitalName}, frontPage.getGlobalQuery())
#end
#end
#end
    );
        }
        result = ${table.entityPath}Service.page(frontPage.getPagePlus(), queryWrapper);
        return AjaxResult.success(result);
    }

    /**
     * 新增
     * @param ${table.entityPath}  傳遞的實體
     * @return  null 失敗  實體成功
     */
    @PostMapping
    @Secured("${table.entityPath}_add")
    public AjaxResult save(@RequestBody ${entity} ${table.entityPath}) {
#foreach($field in ${table.fields})
#if(${field.capitalName} == "Creator" || ${field.capitalName} == "Updater")
        String user = CommonMethods.getUser();
#break;
#end
#end
#foreach($field in ${table.fields})
#if(${field.capitalName} == "CreateTime" || ${field.capitalName} == "UpdateTime")
        LocalDateTime now = LocalDateTime.now();
#break;
#end
#end
#foreach($field in ${table.fields})
#if(${field.capitalName} == "Creator")
        ${table.entityPath}.setCreator(user);
#end
#if(${field.capitalName} == "Updater")
        ${table.entityPath}.setUpdater(user);
#end
#end
#foreach($field in ${table.fields})
#if(${field.capitalName} == "CreateTime")
        ${table.entityPath}.setCreateTime(now);
#end
#if(${field.capitalName} == "UpdateTime")
        ${table.entityPath}.setUpdateTime(now);
#end
#end
        return AjaxResult.success(${table.entityPath}Service.save(${table.entityPath}));
    }

    /**
     * 修改
     * @param ${table.entityPath}  傳遞的實體
     * @return  null 失敗  實體成功
     */
    @PutMapping
    @Secured("${table.name}_edit")
    public AjaxResult updateById(@RequestBody ${entity} ${table.entityPath}) {
#foreach($field in ${table.fields})
#if(${field.capitalName} == "Updater")
		String user = CommonMethods.getUser();
        ${table.entityPath}.setUpdater(user);
#end
#end
#foreach($field in ${table.fields})
#if(${field.capitalName} == "UpdateTime")
		LocalDateTime now = LocalDateTime.now();
        ${table.entityPath}.setUpdateTime(now);
#end
#end
        return AjaxResult.success(${table.entityPath}Service.updateById(${table.entityPath}));
    }

    /**
     * 根據id刪除對像
     * @param id  實體ID
     * @return 0 失敗  1 成功
     */
    @ResponseBody
    @RequestMapping(method = RequestMethod.DELETE, value = "/{id:.+}")
    @Secured("${table.name}_delete")
    public AjaxResult removeById(@PathVariable("id") String id){
        return AjaxResult.success(${table.entityPath}Service.removeById(id));
    }

    /**
     * 批量刪除對像
     * @param ids 實體集合ID
     * @return  0 失敗  1 成功
     */
    @ResponseBody
    @RequestMapping(method = RequestMethod.POST, value = "/delete-batch")
    @Secured("${table.name}_batch_delete")
    public AjaxResult removeByIds(List<String> ids){
        return AjaxResult.success(${table.entityPath}Service.removeByIds(ids));
    }
}